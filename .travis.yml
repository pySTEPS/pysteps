language: python

env:
  global:
    - MINIMAL_DEPENDENCIES="cython numpy jsmin jsonschema matplotlib netCDF4 opencv pillow pyproj scipy dask"
    - OPTIONAL_DEPENDENCIES="dask pyfftw cartopy h5py PyWavelets pygrib"
    - TEST_DEPENDENCIES="pytest pytest-cov codecov"

jobs:
  include:
    - os: linux
      python: 3.8
      env:
        - PYTHON_VERSION=3.8
        - RUN_TESTS=false

    - os: linux
      python: 3.6
      env:
        - PYTHON_VERSION=3.6
        - RUN_TESTS=true

    - os: linux
      python: 3.7
      env:
        - PYTHON_VERSION=3.7
        - RUN_TESTS=true

    - os: linux
      python: 3.8
      env:
        - PYTHON_VERSION=3.8
        - RUN_TESTS=true

    - os: osx
      language: generic
      osx_image: xcode12
      env:
        - PYTHON_VERSION=3.8
        - RUN_TESTS=false

    - os: osx
      language: generic
      osx_image: xcode12
      env:
        - PYTHON_VERSION=3.6
        - RUN_TESTS=true

    - os: osx
      language: generic
      osx_image: xcode12
      env:
        - PYTHON_VERSION=3.7
        - RUN_TESTS=true

    - os: osx
      language: generic
      osx_image: xcode12
      env:
        - PYTHON_VERSION=3.8
        - RUN_TESTS=true

before_install:
  # Install gcc for MacOSX
  # ----------------------
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export HOMEBREW_NO_INSTALL_CLEANUP=1;
      brew update-reset;
      brew update;
      brew install gcc@9;
      which gcc-9 ;
      export CC=gcc-9  ;
      export CXX=g++-9 ;
      export CXX1X=g++-9 ;
      gcc-9 --version;
    fi

  # Install miniconda
  # -----------------
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    travis_retry wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    travis_retry wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi

  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Create the basic testing environment
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls yes
  - conda config --add channels conda-forge
  - conda config --add channels conda-forge/label/testing
  - ENV_NAME="test-environment"
  - travis_retry conda create -n $ENV_NAME python=$PYTHON_VERSION
  - source activate $ENV_NAME

  # Customise the testing environment
  # ---------------------------------
  - export CYTHON_COVERAGE=1;
  - if [[ "$RUN_TESTS" == true ]]; then
    PACKAGES="$MINIMAL_DEPENDENCIES $OPTIONAL_DEPENDENCIES $TEST_DEPENDENCIES";
    travis_retry conda install --quiet $PACKAGES ;
    fi;

install:

  # Install pysteps
  # ---------------
  - export PYSTEPS_BUILD_DIR="$( pwd )"
  - pip install .
  - cd ~

  # Check that the pysteps package can be imported
  - python -c "import pysteps; print(pysteps.__file__)"
  # Check the compiled modules
  - python -c "from pysteps import motion"
  - python -c "from pysteps.motion import vet"
  - python -c "from pysteps.motion import proesmans"


script:
  - if [[ "$RUN_TESTS" == true ]]; then
    bash $PYSTEPS_BUILD_DIR/ci/run_tests.sh;
    fi

after_success:
  - if [[ "$RUN_TESTS" == true ]]; then codecov; fi
