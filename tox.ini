# Tox configuration file for pysteps projects
# Need conda, tox and tox-conda installed to run
#
# In conda run:
#   > conda install -c conda-forge tox tox-conda
#
# Alternatively, you can install them using pip:
#   > pip install tox tox-conda
#
# Then, to run the tests, from the repoâ€™s root run:
#
# > tox             # Run pytests
# > tox -e install  # Test package installation
# > tox -e black    # Test for black formatting warnings

[tox]
envlist = py36, py37, py38, py39

[testenv]
description = Run the pysteps's test suite
deps =
    -r{toxinidir}/requirements.txt
    cython
    dask
    toolz
    pillow
    pyfftw
    h5py
    PyWavelets
    gitpython
    pytest
    pytest-cov
    codecov
conda_deps =
    netCDF4
    pyproj
    cartopy
    pygrib
conda_channels = conda-forge

setenv =
    PYSTEPS_DATA_PATH = {toxworkdir}/pysteps-data
    PYSTEPSRC = {toxworkdir}/pysteps-data/pystepsrc
    PACKAGE_ROOT = {toxinidir}
    PROJ_LIB={envdir}/share/proj
commands =
    python {toxinidir}/ci/fetch_pysteps_data.py
    pytest --pyargs pysteps --cov=pysteps -ra --disable-warnings

[test_no_cov]
commands =
    python {toxinidir}/ci/fetch_pysteps_data.py
    pytest --pyargs pysteps --disable-warnings

[testenv:install]
description = Test the installation of the package in a clean environment and run minimal tests
deps = pytest
conda_deps =
changedir = {homedir}
commands =
    pip install -U {toxinidir}/
    python -c "import pysteps"

    # Test the Pysteps plugin support
    pip install cookiecutter
    cookiecutter -f --no-input https://github.com/pySTEPS/cookiecutter-pysteps-plugin -o {temp_dir}/
    pip install {temp_dir}/pysteps-importer-abc
    python {toxinidir}/ci/test_plugin_support.py

    # Check the compiled modules
    python -c "from pysteps import motion"
    python -c "from pysteps.motion import vet"
    python -c "from pysteps.motion import proesmans"


[testenv:install_full]
description = Test the installation of the package in an environment with all the dependencies
changedir = {homedir}
commands =
    {[testenv:install]commands}
    {[test_no_cov]commands}

[testenv:pypi]
description = Test the installation of the package from the PyPI in a clean environment
deps = pytest
conda_deps =
changedir = {homedir}
commands =
    pip install --no-cache-dir pysteps
    python -c "import pysteps"
    {[test_no_cov]commands}

[testenv:pypi_test]
description = Test the installation of the package from the test-PyPI in a clean environment
deps = pytest
conda_deps =
changedir = {homedir}
commands =
    pip install --no-cache-dir --index-url https://test.pypi.org/simple/  --extra-index-url=https://pypi.org/simple/ pysteps
    python -c "import pysteps"
    {[test_no_cov]commands}

[testenv:pypi_test_full]
description = Test the installation of the package from the test-PyPI in an environment with all the dependencies
changedir = {homedir}
commands = {[testenv:pypi_test]commands}


[testenv:docs]
description = Build the html documentation using sphinx
usedevelop = True
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/doc/requirements.txt
    cython
conda_channels =
    conda-forge
    default
changedir = doc
setenv =
    PYSTEPS_DATA_PATH = {toxworkdir}/pysteps-data
    PYSTEPSRC = {toxworkdir}/pysteps-data/pystepsrc
commands =
    python {toxinidir}/ci/fetch_pysteps_data.py
    sphinx-build -b html source _build

[testenv:black]
deps = black
commands = black --check pysteps